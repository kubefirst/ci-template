apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: argo
  generateName: ci-build-
spec:
  entrypoint: ci
  serviceAccountName: argo
  templates:
  - name: ci
    steps:
    - - name: kubefirst-build
        templateRef:
          name: cwft-k1-ci
          template: build-template
          clusterScope: true
        arguments:
          parameters:
          - name: branch
            value: <CI_KUBEFIRST_BRANCH>

    - - name: kubefirst-init
        templateRef:
          name: cwft-k1-ci
          template: init-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          parameters:
          - name: command
            value: "./kubefirst action aws-whoami && \
            ./kubefirst init --cloud aws --region <AWS_DEFAULT_REGION> --aws-nodes-spot --cluster-name <CI_CLUSTER_NAME> --git-provider gitlab \
            --s3-suffix <CI_S3_SUFFIX> --admin-email kubefirst-bot@kubefirst.com --hosted-zone-name <CI_HOSTED_ZONE_NAME> --gitops-branch <CI_GITOPS_BRANCH> \
            --aws-assume-role 'arn:aws:iam::<AWS_ACCOUNT_ID>:role/ci-role-<CLUSTER_NAME>' --metaphor-branch <CI_METAPHOR_BRANCH> --silent" 
          artifacts:
            - name: source
              from: "{{steps.kubefirst-build.outputs.artifacts.source}}"

    - - name: TestAreS3BucketsLiveIntegration
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "go test -v -run TestAreS3BucketsLiveIntegration ./internal/aws"

    - - name: kubefirst-create
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "echo 'nameserver 208.67.222.222' >> /etc/resolv.conf && \
            echo 'nameserver 1.1.1.1' >> /etc/resolv.conf && \
            echo 'nameserver 1.0.0.1' >> /etc/resolv.conf && \
            echo 'nameserver 8.8.8.8' >> /etc/resolv.conf && \
            curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator && \
            mkdir -p $HOME/bin && \
            cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && \
            export PATH=$PATH:$HOME/bin && \
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc && \
            chmod +x /root/bin/aws-iam-authenticator && \
            rm logs/log* && \
            ./kubefirst cluster create --silent"
  
    - - name: TestArgoCDLivenessIntegration
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "go test -v -run TestArgoCDLivenessIntegration ./internal/argocd"


      - name: TestArgoWorkflowLivenessIntegration
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestArgoWorkflowLivenessIntegration ./internal/argocd"

      - name: TestGitLabLivenessIntegration
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestGitLabLivenessIntegration ./internal/gitlab"

      - name: TestMetaphorsLivenessIntegration
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestMetaphorsLivenessIntegration ./internal/metaphor"

    - - name: sleep
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "sleep 10m"

    - - name: kubefirst-bakup-ssl
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "./kubefirst backupSSL"

    - - name: kubefirst-destroy
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator && \
            mkdir -p $HOME/bin && \
            cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && \
            export PATH=$PATH:$HOME/bin && \
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc && \
            chmod +x /root/bin/aws-iam-authenticator && \
            rm logs/log* && \
            ./kubefirst cluster destroy --silent || ./kubefirst cluster destroy --silent --skip-gitlab-terraform --skip-delete-register"

    - - name: delete-elb
        template: aws-cli
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-destroy.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-destroy.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-destroy.outputs.artifacts.kubefirst}}"
          parameters:
          - name: command
            value: |
              apt update -y
              apt install unzip less jq -y
              curl 'https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip' -o 'awscliv2.zip'
              unzip awscliv2.zip
              ./aws/install
              aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
              aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
              aws configure set region $AWS_REGION
              aws configure set output json
              ELB=$(for i in $(aws elb describe-load-balancers | jq -r '.LoadBalancerDescriptions[].LoadBalancerName'); do aws elb describe-tags --load-balancer-names "$i" | jq -ce '.TagDescriptions[].Tags[] | select( .Key == "kubernetes.io/cluster/<CI_CLUSTER_NAME>" and .Value == "owned")' && echo "$i" ;done | sed -n '2 p')
              aws elb delete-load-balancer --load-balancer-name $ELB 
              sleep 120

    - - name: destroy-leftovers
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-destroy.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-destroy.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-destroy.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator && \
            mkdir -p $HOME/bin && \
            cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && \
            export PATH=$PATH:$HOME/bin && \
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc && \
            chmod +x /root/bin/aws-iam-authenticator && \
            rm logs/log* && \
            ./kubefirst cluster destroy --silent --skip-gitlab-terraform --skip-delete-register"

    - - name: TestIsVPCByTagDestroyedIntegration
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestIsVPCByTagDestroyedIntegration ./internal/aws"

      - name: TestIsLoadBalancerByTagDestroyedIntegration
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestIsLoadBalancerByTagDestroyedIntegration ./internal/aws"

    - - name: TestAreS3BucketsDestroyedIntegration
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestAreS3BucketsDestroyedIntegration ./internal/aws"

      - name: TestIsKMSKeyAliasDestroyedIntegration
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestIsKMSKeyAliasDestroyedIntegration ./internal/aws"

      - name: TestIsEKSDestroyedIntegration
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestIsEKSDestroyedIntegration ./internal/aws"

    - - name: kubefirst-clean
        templateRef:
          name: cwft-k1-ci
          template: clean-template
          clusterScope: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          parameters:
          - name: command
            value: "./kubefirst clean --destroy-buckets --destroy-confirm"
