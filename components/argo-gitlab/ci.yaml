apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: argo
  generateName: ci-build-
spec:
  entrypoint: ci
  serviceAccountName: argo
  templates:
  - name: ci
    steps:
    - - name: kubefirst-build
        templateRef:
          name: cwft-k1-ci
          template: build-template
          clusterScope: true 
        arguments:
          parameters:
          - name: branch
            value: "issue_638"
        
    - - name: kubefirst-init
        templateRef:
          name: cwft-k1-ci
          template: init-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          parameters:
          - name: command
            value: "./kubefirst action aws-whoami && \
            ./kubefirst init --cloud aws --region us-east-1 --aws-nodes-spot --cluster-name 6zraykubefirsttech5 --git-provider gitlab \
            --s3-suffix 6zray-kubefirst-tech-5 --admin-email kubefirst-bot@kubefirst.com --hosted-zone-name 6zray.kubefirst.tech   --gitops-branch main \
            --aws-assume-role 'arn:aws:iam::126827061464:role/ci-role-6zrayfeedkraycom3' --metaphor-branch main --silent" 
          artifacts:
            - name: source
              from: "{{steps.kubefirst-build.outputs.artifacts.source}}"


    - - name: kubefirst-create
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "echo 'nameserver 208.67.222.222' >> /etc/resolv.conf && \
            echo 'nameserver 1.1.1.1' >> /etc/resolv.conf && \
            echo 'nameserver 1.0.0.1' >> /etc/resolv.conf && \
            echo 'nameserver 8.8.8.8' >> /etc/resolv.conf && \
            curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator && \
            mkdir -p $HOME/bin && \
            cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && \
            export PATH=$PATH:$HOME/bin && \
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc && \
            chmod +x /root/bin/aws-iam-authenticator && \
            rm logs/log* && \
            ./kubefirst cluster create --silent"              
    
    - - name: sleep
        templateRef:
          name: cwft-k1-ci
          template: create-template
          clusterScope: true 
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "sleep 10m"
    - - name: kubefirst-bakup-ssl
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true     
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "./kubefirst backupSSL"
    - - name: kubefirst-destroy
        templateRef:
          name: cwft-k1-ci
          template: destroy-template
          clusterScope: true   
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator && \
            mkdir -p $HOME/bin && \
            cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && \
            export PATH=$PATH:$HOME/bin && \
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc && \
            chmod +x /root/bin/aws-iam-authenticator && \
            rm logs/log* && \
            ./kubefirst cluster destroy --silent || ./kubefirst cluster destroy --silent --skip-gitlab-terraform --skip-delete-register"

    - - name: kubefirst-clean
        templateRef:
          name: cwft-k1-ci
          template: clean-template
          clusterScope: true         
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          parameters:
          - name: command
            value: "./kubefirst clean --destroy-buckets --destroy-confirm"   
