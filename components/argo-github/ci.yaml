apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: argo
  generateName: ci-build-
spec:
  entrypoint: ci
  serviceAccountName: argo
  templates:
  - name: ci
    steps:
    - - name: kubefirst-build
        template: build-template

    - - name: kubefirst-init
        template: init-template
        continueOn:
          failed: true
        arguments:
          parameters:
          - name: command
            value: "./kubefirst action aws-whoami && \
            ./kubefirst init --cloud aws --region <AWS_DEFAULT_REGION> --aws-nodes-spot --cluster-name <CI_CLUSTER_NAME> \
            --s3-suffix <CI_S3_SUFFIX> --admin-email $EMAIL --hosted-zone-name $HOSTED_ZONE_NAME --gitops-branch $GITOPS_BRANCH \
            --aws-assume-role 'arn:aws:iam::<AWS_ACCOUNT_ID>:role/ci-role-<CLUSTER_NAME>' --metaphor-branch $METAPHOR_BRANCH \
            --github-user <CI_GITHUB_USER> --github-org <CI_GITHUB_ORGANIZATION> --silent" 
          artifacts:
            - name: source
              from: "{{steps.kubefirst-build.outputs.artifacts.source}}"

    - - name: TestAreS3BucketsLiveIntegration
        template: create-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "go test -v -run TestAreS3BucketsLiveIntegration ./internal/aws"

    - - name: kubefirst-create
        template: create-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "echo 'nameserver 208.67.222.222' >> /etc/resolv.conf && \
            echo 'nameserver 1.1.1.1' >> /etc/resolv.conf && \
            echo 'nameserver 1.0.0.1' >> /etc/resolv.conf && \
            echo 'nameserver 8.8.8.8' >> /etc/resolv.conf && \
            curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator && \
            mkdir -p $HOME/bin && \
            cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && \
            export PATH=$PATH:$HOME/bin && \
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc && \
            chmod +x /root/bin/aws-iam-authenticator && \
            rm logs/log* && \
            ./kubefirst cluster create --silent"
  
    - - name: TestArgoCDLivenessIntegration
        template: create-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "go test -v -run TestArgoCDLivenessIntegration ./internal/argocd"


      - name: TestArgoWorkflowLivenessIntegration
        template: create-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestArgoWorkflowLivenessIntegration ./internal/argocd"

      - name: TestMetaphorsLivenessIntegration
        template: create-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestMetaphorsLivenessIntegration ./internal/metaphor"

    - - name: sleep
        template: create-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}" 
          parameters:
          - name: command
            value: "sleep 1m"

    - - name: kubefirst-destroy
        template: destroy-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator && \
            mkdir -p $HOME/bin && \
            cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && \
            export PATH=$PATH:$HOME/bin && \
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc && \
            chmod +x /root/bin/aws-iam-authenticator && \
            rm logs/log* && \
            ./kubefirst cluster destroy --silent || ./kubefirst cluster destroy --silent --skip-delete-register"

    - - name: TestIsVPCByTagDestroyedIntegration
        template: destroy-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestIsVPCByTagDestroyedIntegration ./internal/aws"

      - name: TestIsLoadBalancerByTagDestroyedIntegration
        template: destroy-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestIsLoadBalancerByTagDestroyedIntegration ./internal/aws"

    - - name: TestAreS3BucketsDestroyedIntegration
        template: destroy-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestAreS3BucketsDestroyedIntegration ./internal/aws"

      - name: TestIsKMSKeyAliasDestroyedIntegration
        template: destroy-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestIsKMSKeyAliasDestroyedIntegration ./internal/aws"

      - name: TestIsEKSDestroyedIntegration
        template: destroy-template
        continueOn:
          failed: true
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-create.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-create.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-create.outputs.artifacts.kubefirst}}"
          - name: command5
            from: "{{steps.kubefirst-build.outputs.artifacts.gopkg}}"
          parameters:
          - name: command
            value: "go test -v -run TestIsEKSDestroyedIntegration ./internal/aws"

    - - name: kubefirst-clean
        template: clean-template
        arguments:
          artifacts:
          - name: command2
            from: "{{steps.kubefirst-init.outputs.artifacts.source}}"
          - name: command3
            from: "{{steps.kubefirst-init.outputs.artifacts.k1}}"
          - name: command4
            from: "{{steps.kubefirst-init.outputs.artifacts.kubefirst}}"
          parameters:
          - name: command
            value: "./kubefirst clean --destroy-buckets --destroy-confirm"

  - name: build-template
    container:
      image: golang:latest
      command: [sh, -c]
      args: ["go build -ldflags='-X github.com/kubefirst/kubefirst/configs.K1Version=1.9.9' . && go get -t ./..."]
      workingDir: /src/kubefirst
      env:
        - name: AWS_REGION
          value: <AWS_DEFAULT_REGION>
    inputs:
        artifacts:
        - name: source
          path: /src/kubefirst
          git:
            repo: https://github.com/kubefirst/kubefirst.git
    outputs:
        artifacts:
        - name: source
          path: /src/kubefirst
        - name: gopkg
          path: /go/pkg
  
  - name: init-template
    container:
      image: golang:latest
      command: [sh, -c]
      args: ["{{inputs.parameters.command}}"]
      workingDir: /src/kubefirst
      env:
        - name: AWS_REGION
          value: <AWS_DEFAULT_REGION>
        - name: CLUSTER_NAME
          value: <CI_CLUSTER_NAME>
        - name: SUFFIX_S3
          value: <CI_S3_SUFFIX>
        - name: EMAIL
          value: kubefirst-bot@kubefirst.com
        - name: HOSTED_ZONE_NAME
          value: <CI_HOSTED_ZONE_NAME>
        - name: GITOPS_BRANCH
          value: main
        - name: METAPHOR_BRANCH
          value: main
        - name: GITHUB_AUTH_TOKEN
          valueFrom: 
            secretKeyRef:
              name: github-token
              key: password
    inputs:
      artifacts:
      - name: source
        path: /src/kubefirst
      parameters:
      - name: command
    outputs:
      artifacts:
      - name: k1
        path: /root/.k1
      - name: kubefirst
        path: /root/.kubefirst
      - name: source
        path: /src/kubefirst
      - name: logs
        path: /src/kubefirst/logs

  - name: create-template
    inputs:
      artifacts:
      - name: command2
        path: /src/kubefirst
      - name: command3
        path: /root/.k1
      - name: command4
        path: /root/.kubefirst
      - name: command5
        path: /go/pkg
      parameters:
      - name: command
    outputs:
      artifacts:
      - name: k1
        path: /root/.k1
      - name: kubefirst
        path: /root/.kubefirst
      - name: source
        path: /src/kubefirst
      - name: logs
        path: /src/kubefirst/logs
    container:
      image: golang:latest
      command: [sh, -c]
      args: ["{{inputs.parameters.command}}"]
      workingDir: /src/kubefirst
      env:
        - name: CLUSTER_NAME
          value: <CI_CLUSTER_NAME>
        - name: SUFFIX_S3
          value: <CI_S3_SUFFIX>
        - name: EMAIL
          value: kubefirst-bot@kubefirst.com
        - name: HOSTED_ZONE_NAME
          value: <CI_HOSTED_ZONE_NAME>
        - name: GITOPS_BRANCH
          value: main
        - name: METAPHOR_BRANCH
          value: main
        - name: GITHUB_AUTH_TOKEN
          valueFrom: 
            secretKeyRef:
              name: github-token
              key: password
            
  - name: clean-template
    inputs:
      artifacts:
      - name: command2
        path: /src/kubefirst
      - name: command3
        path: /root/.k1
      - name: command4
        path: /root/.kubefirst
      parameters:
      - name: command
    outputs:
      artifacts:
      - name: k1
        path: /root/.k1
      - name: kubefirst
        path: /root/.kubefirst
      - name: source
        path: /src/kubefirst
      - name: logs
        path: /src/kubefirst/logs
    container:
      image: golang:latest
      command: [sh, -c]
      args: ["{{inputs.parameters.command}}"]
      workingDir: /src/kubefirst
      env:
        - name: CLUSTER_NAME
          value: <CI_CLUSTER_NAME>
        - name: SUFFIX_S3
          value: <CI_S3_SUFFIX>
        - name: EMAIL
          value: kubefirst-bot@kubefirst.com
        - name: HOSTED_ZONE_NAME
          value: <CI_HOSTED_ZONE_NAME>
        - name: GITOPS_BRANCH
          value: main
        - name: METAPHOR_BRANCH
          value: main
        - name: GITHUB_AUTH_TOKEN
          valueFrom: 
            secretKeyRef:
              name: github-token
              key: password
            
  - name: destroy-template
    inputs:
      artifacts:
      - name: command2
        path: /src/kubefirst
      - name: command3
        path: /root/.k1
      - name: command4
        path: /root/.kubefirst
      - name: command5
        path: /go/pkg
      parameters:
      - name: command
    outputs:
      artifacts:
      - name: logs
        path: /src/kubefirst/logs
    container:
      image: golang:latest
      command: [sh, -c]
      args: ["{{inputs.parameters.command}}"]
      workingDir: /src/kubefirst
      env:
        - name: CLUSTER_NAME
          value: <CI_CLUSTER_NAME>
        - name: SUFFIX_S3
          value: <CI_S3_SUFFIX>
        - name: EMAIL
          value: kubefirst-bot@kubefirst.com
        - name: HOSTED_ZONE_NAME
          value: <CI_HOSTED_ZONE_NAME>
        - name: GITOPS_BRANCH
          value: main
        - name: METAPHOR_BRANCH
          value: main
        - name: GITHUB_AUTH_TOKEN
          valueFrom: 
            secretKeyRef:
              name: github-token
              key: password